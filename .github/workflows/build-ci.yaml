name: Build

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} [${{ matrix.archs }}]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # macOS Intel & ARM
          - os: macos-latest
            archs: all
          # Windows x86 32-bit and 64-bit
          - os: windows-latest
            archs: auto
          # Windows ARM
          - os: windows-latest
            archs: ARM64
          # Linux x86 32-bit and 64-bit
          - os: ubuntu-latest
            archs: auto
          # Linux aarch64
          - os: ubuntu-latest
            archs: aarch64
          # Linux ppc64le
          - os: ubuntu-latest
            archs: ppc64le
          # Linux s390x
          - os: ubuntu-latest
            archs: s390x

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_BUILD: "cp313-*"
          CIBW_ARCHS: ${{ matrix.archs }}
          CIBW_PRERELEASE_PYTHONS: true

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-cibw-wheels-${{ matrix.os }}-${{ matrix.archs }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  make-sdist:
    name: Make source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: artifact-source-dist
        path: "./**/dist/*.tar.gz"

  upload_pypi:
    if: github.event_name == 'push' && github.ref_type == 'tag'
    name: Publish built wheels to Pypi
    runs-on: ubuntu-latest
    environment: release
    needs: [make-sdist, build_wheels]
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4

      - name: Copy artifacts to dist/ folder
        run: |
          find . -name 'artifact-*' -exec unzip '{}' \;
          mkdir -p dist/
          find . -name '*.tar.gz' -exec mv '{}' dist/ \;
          find . -name '*.whl' -exec mv '{}' dist/ \;

      - uses: pypa/gh-action-pypi-publish@release/v1
        name: Publish to PyPI
